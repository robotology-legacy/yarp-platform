#!/usr/bin/perl
# Copyright (C) 2007 Michele Tavella <michele@liralab.it>
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.

# requires lmtools2:
# export PATH=/home/michele/YARP/platform/contact/linguometer/lmtools2/scripts:$PATH
# requires matlab
# 

use Getopt::Long;
use File::Copy;
use Cwd;
use Term::ANSIColor;
use Sys::Hostname;
use POSIX qw(ceil floor);
use strict;

my $opt_giampi = 0;

my $us_dir = "temp/us";
my $cc_dir = "temp/cc";
my $ag_dir = "temp/ag";
my $vor_dir = "temp/vor";
my $vof_dir = "temp/vof";

die "Usage: lm_makeonemovie usdv_file ccdv_file uswav_file agpos_file wdtxt_file /path/to/dest\n" unless $ARGV != 5;
my $usdv_file = shift;
my $ccdv_file = shift;
my $uswav_file = shift;
my $agpos_file = shift;
my $wdtxt_file = shift;
my $dir_trg    = shift;

print "[lm_makemovie] Input files:\n";
print "   US-DV   $usdv_file\n";
print "   CC-DV   $ccdv_file\n";
print "   US-WAV  $uswav_file\n";
print "   AG-POS  $agpos_file\n";
print "   WD-TXT  $wdtxt_file\n";
	
die "US-DV  ($usdv_file):  $!\n" unless -e $usdv_file;
die "CC-DV  ($ccdv_file):  $!\n" unless -e $ccdv_file;
die "US-WAV ($uswav_file): $!\n" unless -e $uswav_file;
die "AG-POS ($agpos_file): $!\n" unless -e $agpos_file;
die "WD-TXT ($wdtxt_file): $!\n" unless -e $wdtxt_file;

my $wdtxt_data = `cat $wdtxt_file | grep -v "#"`;
chomp($wdtxt_data);
my @wdtxt_vals = split(' ', $wdtxt_data);
my $wd_txt = @wdtxt_vals[1];
my $wd_exp = sprintf("%.4d", @wdtxt_vals[3]);
my $wd_seq = sprintf("%.4d", @wdtxt_vals[4]);
my $wd_num = sprintf("%.4d", @wdtxt_vals[5]);
my $ag_title = "$wd_exp/$wd_seq/$wd_num ($wd_txt)";


my $trg_avi_hq = "$dir_trg/lmvi_hq_$wd_exp-$wd_seq-$wd_num.avi";

print "[lm_makeonemovie] Output will be: $trg_avi_hq\n";
if (-e $trg_avi_hq) {
	print "[lm_makeonemovie] File exists ($trg_avi_hq)!\n";
} else {
	my $cmd_redirect = "1>/dev/null 2>/dev/null";
	#my $cmd_renice   = "nice -n 17";
	my $cmd_renice   = "nice -n 0";
	my $cmd_usdv2png = "$cmd_renice mplayer " . $usdv_file . " -vo png -ao null " . $cmd_redirect;
	my $cmd_ccdv2png = "$cmd_renice mplayer " . $ccdv_file . " -vo png -ao null " . $cmd_redirect;
	# Just on clango! lmtools2 requires old version of ffmpeg (both bin and lib!)
	#my $cmd_usdv2png = "ffmpeg -i " . $usdv_file . " -vcodec png %8d.png " . $cmd_redirect;
	#my $cmd_ccdv2png = "ffmpeg -i " . $ccdv_file . " -vcodec png %8d.png " . $cmd_redirect;

	print "[lm_makeonemovie] Cleaning\n";
	system("rm -f $us_dir/*");
	system("rm -f $cc_dir/*");
	system("rm -f $ag_dir/*");
	system("rm -f $vof_dir/*");
	system("rm -f $vor_dir/*");
		
	print "[lm_makeonemovie] US-DV --> PNG\n";
	system($cmd_usdv2png);
	system("mv *.png $us_dir");
	system("cd $us_dir; ctk_lmus");

	print "[lm_makeonemovie] CC-DV --> PNG\n";
	system($cmd_ccdv2png);
	system("mv *.png $cc_dir");
	system("cd $cc_dir; ctk_lmcc");

	print "[lm_makeonemovie] AG-POS --> PNG\n";
	my $cmd_agpos2png = "$cmd_renice matlab -nosplash -nojvm -r \"lmAG2Frames(\'$agpos_file\', \'$ag_dir\', \'$ag_title\'); quit\"";

	system($cmd_agpos2png);
		
	my @agimg_files_ns  = `ls -1 $ag_dir | grep png`;
	my @agimg_files     = sort {$a cmp $b} @agimg_files_ns;
	for my $image (@agimg_files) {
		chomp($image);
		my $frame = $image;
		$frame =~ s/png/jpg/g;
		my $image_bmp = $image;
		$image_bmp =~ s/png/bmp/g;
		
		print "[lm_makeonemovie] Current frames: [AG, US, CC]->$image\n";
		if($opt_giampi) {
			system("$cmd_renice convert -quality 100 -geometry x424 $us_dir/$image $us_dir/$image");
			system("$cmd_renice convert -quality 100 -geometry x424 $cc_dir/$image $cc_dir/$image");
			system("$cmd_renice convert -transparent black $ag_dir/$image $ag_dir/$image");
			system("$cmd_renice composite -compose src-over $ag_dir/$image $us_dir/$image $us_dir/$image");
			my $cmd_argv = "$cc_dir/$image $us_dir/$image $vor_dir/$image";
			system("$cmd_renice montage -tile 2x -background black -geometry +0+0 $cmd_argv");
			system("$cmd_renice convert -geometry 793x424 $vor_dir/$image $vor_dir/$image");
			system("$cmd_renice convert $vor_dir/$image $vof_dir/$frame");
		} else {
			system("$cmd_renice convert -quality 100 -geometry x424 $us_dir/$image $us_dir/$image_bmp");
			system("$cmd_renice convert -quality 100 -geometry x424 $cc_dir/$image $cc_dir/$image_bmp");
			my $cmd_argv = "$cc_dir/$image_bmp $us_dir/$image_bmp $ag_dir/$image $vor_dir/$image_bmp";
			system("$cmd_renice montage -tile 3x -background black -geometry +0+0 $cmd_argv");
			system("$cmd_renice convert -geometry 1352x424 $vor_dir/$image_bmp $vof_dir/$frame");
			#system("$cmd_renice convert $vor_dir/$image_bmp $vof_dir/$frame");
		}
	}
	print "[lm_makeonemovie] Finally encoding HQ movie\n";
	my $cmd_encoder = "$cmd_renice mencoder \"mf://$vof_dir/*.jpg\" -mf fps=25 -o ";
	my $cmd_argv_hq = "-ovc lavc -lavcopts vcodec=msmpeg4v2:vbitrate=16000 -oac pcm -audiofile";
	my $cmd_argv_uq = "-ovc lavc -oac pcm -audiofile";
	system("$cmd_encoder $trg_avi_hq $cmd_argv_hq $uswav_file");
}
