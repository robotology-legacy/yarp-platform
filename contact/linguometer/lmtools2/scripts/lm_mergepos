#!/usr/bin/perl
# Copyright (C) 2007 Michele Tavella <michele@liralab.it>
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.

use Getopt::Long;
use File::Copy;
use Cwd;
use Term::ANSIColor;
use Sys::Hostname;
use POSIX qw(ceil floor);
use strict;

my $data_type = shift;
my $file_type = "";			# AMP or POS?
my $cmd_stdo  = "1>/dev/null 2>/dev/null";

if ($data_type eq "pos") {
	$file_type  = ".pos";
}
else {
	die "[lm_mergepos] Sorry buddy, data type \"$data_type\" not supported (yet)\n";
}


# Check folders etc
my $folder_src = "root/AG/Sweeps/lm_pos/";

print "[lm_mergepos] Data type is \"$file_type\"\n";
print "              Source folder: $folder_src\n";


die "[lm_mergepos] Error: SOURCE folder does not exist" unless -e $folder_src ;

my @pattern_ns = `find $folder_src | grep "_0.pos"`;
my @pattern    = sort {$a cmp $b} @pattern_ns;

foreach my $pat (@pattern) {
	chomp($pat);

	my $pat_find = $pat;
	$pat_find =~ s/_0/_*/g;
	my $trg_file = $pat;
	$trg_file =~ s/_0//g;
	print "[lm_mergepos] Pattern:\n";
	print "    $pat --> $trg_file\n";
	#print "    ($pat_find)\n";


	my @chunks_ns = `find $pat_find`;
	my @chunks    = sort {$a cmp $b} @chunks_ns;

	if (-e $trg_file) {
		print "[lm_mergepos] Removing TRG file:\n";
		system("rm $trg_file");
	}

	print "[lm_mergepos] Looking for chunks:\n";
	my $size_chunks = 0;
	foreach my $chunk (@chunks) {
		chomp($chunk);
		my $size_chunk = -s "$chunk";
		print "   $chunk [$size_chunk bytes]\n";
		system("cat $chunk >> $trg_file ");

		$size_chunks = $size_chunks + $size_chunk;
	}
	my $size_trg = -s "$trg_file";
	my $size_err = $size_chunks - $size_trg;
	print "[lm_mergepos] Dump details\n";
	print "  Dump error:  $size_err bytes\n";
	print "  Chunks size: $size_chunks bytes\n";
	print "  Target size: $size_trg bytes\n\n";
}
