#! /usr/bin/perl
# Copyright (C) 2007 Michele Tavella <michele@liralab.it>
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.


# LTC_S3
# lmtools2 toolchain: step 3
# Performs segmentation

use Getopt::Long;
use File::Copy;
use Cwd;
use Term::ANSIColor;
use Sys::Hostname;

sub mImportFile
{
	my $file = $_[0];
	
	open(FID, "< $file") or die "Error ($file): $!\n";
	my @data = <FID>;
	close (FID);

	return @data;
}
$path_AG  		= "temp/";
$regex_AG		= "ag_sequence_SSSS.amp";

$regex_SEQ 		= "seq_*";
@folders_SEQ 	= sort {$a cmp $b} `find . -iname "$regex_SEQ"`;

$ext_ALN		= "aln";
$regex_ALN		= "wd_SSSS_ag.aln";

$ext_AMP		= "amp";

foreach $folder_SEQ (@folders_SEQ) {
	chomp($folder_SEQ);
	$folder_SEQ =~ /^(.*)(_)(.*)$/;
	my $idx_SEQ = $3;
	print "Current SEQ:  $idx_SEQ ($folder_SEQ)\n";
	my $file_AG = $path_AG . '/' . $regex_AG;
	$file_AG =~ s/SSSS/$idx_SEQ/g;
	print " Current AGAMP:  $file_AG\n";
	
	@lines_AG = mImportFile($file_AG);
	#foreach $line_AG (@lines_AG) {
	#	print "$line_AG\n";
	#}
	@files_ALN = sort {$a cmp $b} `find $folder_SEQ -iname "*.$ext_ALN"`;
	foreach $file_ALN (@files_ALN) {
		chomp($file_ALN);
		print " Current ALN: $file_ALN\n";
		my @lines_ALN = mImportFile($file_ALN);
		my $line_ALN = @lines_ALN[0];
		chomp($line_ALN);	
    	$line_ALN =~ /^(.*)(\/)(.*)(\/)(.*)(\/)(.*)(\/)(.*)(\/)(.*)$/;
		my $l0 = $9;
		my $l1 = $11;
		#print "$line_ALN ($l0, $l1)\n";
			
		my $file_AMP = $file_ALN;
		$file_AMP =~ s/$ext_ALN/$ext_AMP/g;
		open(FILEAMP, ">$file_AMP");
		for (my $l = $l0; $l <= $l1; $l++) {
			#print FILEAMP "$l @lines_AG[$l]";
			print FILEAMP "@lines_AG[$l]";
		}
		close(FILEAMP);
	}
		
}
