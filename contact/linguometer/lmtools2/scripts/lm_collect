#!/usr/bin/perl

use Getopt::Long;
use File::Copy;
use Cwd;
use Term::ANSIColor;
use Sys::Hostname;


sub mImportFile
{
	my $file = $_[0];
	
	open(FID, "< $file") or die "Error ($file): $!\n";
	my @data = <FID>;
	close (FID);

	return @data;
}

$path_cache = "temp";

# Experiment paths
$path_AGAMP = "root/AG/Sweeps/amps";
$path_AGPOS = "root/AG/Sweeps/rawpos";
$path_WA = "root/AG/Sweeps/wav";
$path_LG = "root/LG";
$path_WS = "root/WS";

# Regex: source
$regex_AGAMPs = "NNNN.amp";
$regex_AGPOSs = "NNNN.pos";
$regex_WAs = "NNNN.wav";
$regex_LGs = "track_NN.wav";

# Regex: target
$regex_AGAMPt = "ag_sequence_SSSS_bin.amp";
$regex_AGPOSt = "ag_sequence_SSSS_bin.pos";
$regex_WAt = "ag_sequence_SSSS.wav";
$regex_LGt = "lg_sequence_SSSS.wav";
$regex_WSt = "ws_sequence_SSSS.txt";

# WS files (no pattern in filename)
@files_WS = `find $path_WS/*`;

$file = "config/lm_collect.cfg";
my @lines = mImportFile($file);


foreach $line (@lines) {
	chomp($line);
    $line =~ /^(.*)(\/)(.*)$/;
	$idt = $1;
	$ids = $3;
	$idsf = sprintf("%.4d", $ids);
	$idtf = sprintf("%.4d", $idt);
	
	#LG files: track_NN.wav
	$idsf2 = sprintf("%.2d", $ids);
	
	#print "$line: $idsf ---> $idtf\n";
	print "Collecting sequence $idtf ($idsf)\n";

	# AG AMP files
	my $file_AGAMPs = $path_AGAMP . "/" . $regex_AGAMPs;
	$file_AGAMPs =~ s/NNNN/$idsf/g;
	my $file_AGAMPt = $path_cache . "/" . $regex_AGAMPt;
	$file_AGAMPt =~ s/SSSS/$idtf/g;
	print " AG AMP   $file_AGAMPt <-- $file_AGAMPs\n";
	copy($file_AGAMPs, $file_AGAMPt) or die "File cannot be copied ($file_AGAMPs, $file_AGAMPt)";	

	# AG POS files
	my $file_AGPOSs = $path_AGPOS . "/" . $regex_AGPOSs;
	$file_AGPOSs =~ s/NNNN/$idsf/g;
	my $file_AGPOSt = $path_cache . "/" . $regex_AGPOSt;
	$file_AGPOSt =~ s/SSSS/$idtf/g;
	print " AG POS   $file_AGPOSt <-- $file_AGPOSs\n";
	copy($file_AGPOSs, $file_AGPOSt) or die "File cannot be copied ($file_AGPOSs, $file_AGPOSt)";	
	
	# AG WAV files
	my $file_WAs = $path_WA . "/" . $regex_WAs;
	$file_WAs =~ s/NNNN/$idsf/g;
	$file_WAt = $path_cache . "/" . $regex_WAt;
	$file_WAt =~ s/SSSS/$idtf/g;
	print " AG WAV   $file_WAt <-- $file_WAs\n";
	copy($file_WAs, $file_WAt) or die "File cannot be copied ($file_WAs, $file_WAt)";	
	
	# LG files
	my $file_LGs = $path_LG . "/" . $regex_LGs;
	$file_LGs =~ s/NN/$idsf2/g;
	$file_LGt = $path_cache . "/" . $regex_LGt;
	$file_LGt =~ s/SSSS/$idtf/g;
	print " LG       $file_LGt <-- $file_LGs\n";
	copy($file_LGs, $file_LGt) or die "File cannot be copied ($file_LGs, $file_LGt)";	
	
	# WS files
	my $file_WSs = @files_WS[$ids - 1];
	chomp($file_WSs);
	$file_WSt = $path_cache . "/" . $regex_WSt;
	$file_WSt =~ s/SSSS/$idtf/g;
	print " WS       $file_WSt <-- $file_WSs\n";
	copy($file_WSs, $file_WSt) or die "File cannot be copied ($file_WSs, $file_WSt)";	
}

